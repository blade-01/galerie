{"version":3,"file":"js/chunk-vendors.f142a1da.js","mappings":"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","sources":["webpack://galerie/./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack://galerie/./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack://galerie/./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack://galerie/./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack://galerie/./node_modules/axios/index.js","webpack://galerie/./node_modules/axios/lib/adapters/xhr.js","webpack://galerie/./node_modules/axios/lib/axios.js","webpack://galerie/./node_modules/axios/lib/cancel/Cancel.js","webpack://galerie/./node_modules/axios/lib/cancel/CancelToken.js","webpack://galerie/./node_modules/axios/lib/cancel/isCancel.js","webpack://galerie/./node_modules/axios/lib/core/Axios.js","webpack://galerie/./node_modules/axios/lib/core/InterceptorManager.js","webpack://galerie/./node_modules/axios/lib/core/buildFullPath.js","webpack://galerie/./node_modules/axios/lib/core/createError.js","webpack://galerie/./node_modules/axios/lib/core/dispatchRequest.js","webpack://galerie/./node_modules/axios/lib/core/enhanceError.js","webpack://galerie/./node_modules/axios/lib/core/mergeConfig.js","webpack://galerie/./node_modules/axios/lib/core/settle.js","webpack://galerie/./node_modules/axios/lib/core/transformData.js","webpack://galerie/./node_modules/axios/lib/defaults.js","webpack://galerie/./node_modules/axios/lib/helpers/bind.js","webpack://galerie/./node_modules/axios/lib/helpers/buildURL.js","webpack://galerie/./node_modules/axios/lib/helpers/combineURLs.js","webpack://galerie/./node_modules/axios/lib/helpers/cookies.js","webpack://galerie/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://galerie/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://galerie/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://galerie/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://galerie/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://galerie/./node_modules/axios/lib/helpers/spread.js","webpack://galerie/./node_modules/axios/lib/utils.js","webpack://galerie/./node_modules/vue-content-loader/dist/vue-content-loader.es.js","webpack://galerie/./node_modules/vue-router/dist/vue-router.esm-bundler.js"],"sourcesContent":["import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = arr[key](...args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return arr[key](...args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = toRaw(this)[key].apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(value, _shallow = false) {\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._rawValue = _shallow ? value : toRaw(value);\r\n        this._value = _shallow ? value : convert(value);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        newVal = this._shallow ? newVal : toRaw(newVal);\r\n        if (hasChanged(newVal, this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        if (self._dirty) {\r\n            self._value = this.effect();\r\n            self._dirty = false;\r\n        }\r\n        track(self, \"get\" /* GET */, 'value');\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isReactive, effect, stop, ref, reactive, shallowReactive, trigger, isProxy, shallowReadonly, track, markRaw, proxyRefs, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction as isFunction$1, isPromise as isPromise$1, isArray, extend, hasOwn, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, isModelListener, remove, NOOP, hasChanged, isObject as isObject$1, isSet, isMap, isPlainObject, invokeArrayFns, def, isReservedProp, EMPTY_ARR, capitalize, toRawType, makeMap, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction$1(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction$1(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise$1(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if ((process.env.NODE_ENV !== 'production') && checkRecursiveUpdates(seen, job)) {\r\n                    continue;\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length ||\r\n            pendingPreFlushCbs.length ||\r\n            pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (key !== '__file' && !(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment: Comment$1,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nconst deprecationData = {\r\n    [\"GLOBAL_MOUNT\" /* GLOBAL_MOUNT */]: {\r\n        message: `The global app bootstrapping API has changed: vm.$mount() and the \"el\" ` +\r\n            `option have been removed. Use createApp(RootComponent).mount() instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#mounting-app-instance`\r\n    },\r\n    [\"GLOBAL_MOUNT_CONTAINER\" /* GLOBAL_MOUNT_CONTAINER */]: {\r\n        message: `Vue detected directives on the mount container. ` +\r\n            `In Vue 3, the container is no longer considered part of the template ` +\r\n            `and will not be processed/replaced.`,\r\n        link: `https://v3.vuejs.org/guide/migration/mount-changes.html`\r\n    },\r\n    [\"GLOBAL_EXTEND\" /* GLOBAL_EXTEND */]: {\r\n        message: `Vue.extend() has been removed in Vue 3. ` +\r\n            `Use defineComponent() instead.`,\r\n        link: `https://v3.vuejs.org/api/global-api.html#definecomponent`\r\n    },\r\n    [\"GLOBAL_PROTOTYPE\" /* GLOBAL_PROTOTYPE */]: {\r\n        message: `Vue.prototype is no longer available in Vue 3. ` +\r\n            `Use app.config.globalProperties instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#vue-prototype-replaced-by-config-globalproperties`\r\n    },\r\n    [\"GLOBAL_SET\" /* GLOBAL_SET */]: {\r\n        message: `Vue.set() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"GLOBAL_DELETE\" /* GLOBAL_DELETE */]: {\r\n        message: `Vue.delete() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"GLOBAL_OBSERVABLE\" /* GLOBAL_OBSERVABLE */]: {\r\n        message: `Vue.observable() has been removed. ` +\r\n            `Use \\`import { reactive } from \"vue\"\\` from Composition API instead.`,\r\n        link: `https://v3.vuejs.org/api/basic-reactivity.html`\r\n    },\r\n    [\"GLOBAL_PRIVATE_UTIL\" /* GLOBAL_PRIVATE_UTIL */]: {\r\n        message: `Vue.util has been removed. Please refactor to avoid its usage ` +\r\n            `since it was an internal API even in Vue 2.`\r\n    },\r\n    [\"CONFIG_SILENT\" /* CONFIG_SILENT */]: {\r\n        message: `config.silent has been removed because it is not good practice to ` +\r\n            `intentionally suppress warnings. You can use your browser console's ` +\r\n            `filter features to focus on relevant messages.`\r\n    },\r\n    [\"CONFIG_DEVTOOLS\" /* CONFIG_DEVTOOLS */]: {\r\n        message: `config.devtools has been removed. To enable devtools for ` +\r\n            `production, configure the __VUE_PROD_DEVTOOLS__ compile-time flag.`,\r\n        link: `https://github.com/vuejs/vue-next/tree/master/packages/vue#bundler-build-feature-flags`\r\n    },\r\n    [\"CONFIG_KEY_CODES\" /* CONFIG_KEY_CODES */]: {\r\n        message: `config.keyCodes has been removed. ` +\r\n            `In Vue 3, you can directly use the kebab-case key names as v-on modifiers.`,\r\n        link: `https://v3.vuejs.org/guide/migration/keycode-modifiers.html`\r\n    },\r\n    [\"CONFIG_PRODUCTION_TIP\" /* CONFIG_PRODUCTION_TIP */]: {\r\n        message: `config.productionTip has been removed.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#config-productiontip-removed`\r\n    },\r\n    [\"CONFIG_IGNORED_ELEMENTS\" /* CONFIG_IGNORED_ELEMENTS */]: {\r\n        message: () => {\r\n            let msg = `config.ignoredElements has been removed.`;\r\n            if (isRuntimeOnly()) {\r\n                msg += ` Pass the \"isCustomElement\" option to @vue/compiler-dom instead.`;\r\n            }\r\n            else {\r\n                msg += ` Use config.isCustomElement instead.`;\r\n            }\r\n            return msg;\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#config-ignoredelements-is-now-config-iscustomelement`\r\n    },\r\n    [\"CONFIG_WHITESPACE\" /* CONFIG_WHITESPACE */]: {\r\n        // this warning is only relevant in the full build when using runtime\r\n        // compilation, so it's put in the runtime compatConfig list.\r\n        message: `Vue 3 compiler's whitespace option will default to \"condense\" instead of ` +\r\n            `\"preserve\". To suppress this warning, provide an explicit value for ` +\r\n            `\\`config.compilerOptions.whitespace\\`.`\r\n    },\r\n    [\"CONFIG_OPTION_MERGE_STRATS\" /* CONFIG_OPTION_MERGE_STRATS */]: {\r\n        message: `config.optionMergeStrategies no longer exposes internal strategies. ` +\r\n            `Use custom merge functions instead.`\r\n    },\r\n    [\"INSTANCE_SET\" /* INSTANCE_SET */]: {\r\n        message: `vm.$set() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"INSTANCE_DELETE\" /* INSTANCE_DELETE */]: {\r\n        message: `vm.$delete() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"INSTANCE_DESTROY\" /* INSTANCE_DESTROY */]: {\r\n        message: `vm.$destroy() has been removed. Use app.unmount() instead.`,\r\n        link: `https://v3.vuejs.org/api/application-api.html#unmount`\r\n    },\r\n    [\"INSTANCE_EVENT_EMITTER\" /* INSTANCE_EVENT_EMITTER */]: {\r\n        message: `vm.$on/$once/$off() have been removed. ` +\r\n            `Use an external event emitter library instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/events-api.html`\r\n    },\r\n    [\"INSTANCE_EVENT_HOOKS\" /* INSTANCE_EVENT_HOOKS */]: {\r\n        message: event => `\"${event}\" lifecycle events are no longer supported. From templates, ` +\r\n            `use the \"vnode\" prefix instead of \"hook:\". For example, @${event} ` +\r\n            `should be changed to @vnode-${event.slice(5)}. ` +\r\n            `From JavaScript, use Composition API to dynamically register lifecycle ` +\r\n            `hooks.`,\r\n        link: `https://v3.vuejs.org/guide/migration/vnode-lifecycle-events.html`\r\n    },\r\n    [\"INSTANCE_CHILDREN\" /* INSTANCE_CHILDREN */]: {\r\n        message: `vm.$children has been removed. Consider refactoring your logic ` +\r\n            `to avoid relying on direct access to child components.`,\r\n        link: `https://v3.vuejs.org/guide/migration/children.html`\r\n    },\r\n    [\"INSTANCE_LISTENERS\" /* INSTANCE_LISTENERS */]: {\r\n        message: `vm.$listeners has been removed. In Vue 3, parent v-on listeners are ` +\r\n            `included in vm.$attrs and it is no longer necessary to separately use ` +\r\n            `v-on=\"$listeners\" if you are already using v-bind=\"$attrs\". ` +\r\n            `(Note: the Vue 3 behavior only applies if this compat config is disabled)`,\r\n        link: `https://v3.vuejs.org/guide/migration/listeners-removed.html`\r\n    },\r\n    [\"INSTANCE_SCOPED_SLOTS\" /* INSTANCE_SCOPED_SLOTS */]: {\r\n        message: `vm.$scopedSlots has been removed. Use vm.$slots instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/slots-unification.html`\r\n    },\r\n    [\"INSTANCE_ATTRS_CLASS_STYLE\" /* INSTANCE_ATTRS_CLASS_STYLE */]: {\r\n        message: componentName => `Component <${componentName ||\r\n            'Anonymous'}> has \\`inheritAttrs: false\\` but is ` +\r\n            `relying on class/style fallthrough from parent. In Vue 3, class/style ` +\r\n            `are now included in $attrs and will no longer fallthrough when ` +\r\n            `inheritAttrs is false. If you are already using v-bind=\"$attrs\" on ` +\r\n            `component root it should render the same end result. ` +\r\n            `If you are binding $attrs to a non-root element and expecting ` +\r\n            `class/style to fallthrough on root, you will need to now manually bind ` +\r\n            `them on root via :class=\"$attrs.class\".`,\r\n        link: `https://v3.vuejs.org/guide/migration/attrs-includes-class-style.html`\r\n    },\r\n    [\"OPTIONS_DATA_FN\" /* OPTIONS_DATA_FN */]: {\r\n        message: `The \"data\" option can no longer be a plain object. ` +\r\n            `Always use a function.`,\r\n        link: `https://v3.vuejs.org/guide/migration/data-option.html`\r\n    },\r\n    [\"OPTIONS_DATA_MERGE\" /* OPTIONS_DATA_MERGE */]: {\r\n        message: (key) => `Detected conflicting key \"${key}\" when merging data option values. ` +\r\n            `In Vue 3, data keys are merged shallowly and will override one another.`,\r\n        link: `https://v3.vuejs.org/guide/migration/data-option.html#mixin-merge-behavior-change`\r\n    },\r\n    [\"OPTIONS_BEFORE_DESTROY\" /* OPTIONS_BEFORE_DESTROY */]: {\r\n        message: `\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`\r\n    },\r\n    [\"OPTIONS_DESTROYED\" /* OPTIONS_DESTROYED */]: {\r\n        message: `\\`destroyed\\` has been renamed to \\`unmounted\\`.`\r\n    },\r\n    [\"WATCH_ARRAY\" /* WATCH_ARRAY */]: {\r\n        message: `\"watch\" option or vm.$watch on an array value will no longer ` +\r\n            `trigger on array mutation unless the \"deep\" option is specified. ` +\r\n            `If current usage is intended, you can disable the compat behavior and ` +\r\n            `suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"WATCH_ARRAY\" /* WATCH_ARRAY */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/watch.html`\r\n    },\r\n    [\"PROPS_DEFAULT_THIS\" /* PROPS_DEFAULT_THIS */]: {\r\n        message: (key) => `props default value function no longer has access to \"this\". The compat ` +\r\n            `build only offers access to this.$options.` +\r\n            `(found in prop \"${key}\")`,\r\n        link: `https://v3.vuejs.org/guide/migration/props-default-this.html`\r\n    },\r\n    [\"CUSTOM_DIR\" /* CUSTOM_DIR */]: {\r\n        message: (legacyHook, newHook) => `Custom directive hook \"${legacyHook}\" has been removed. ` +\r\n            `Use \"${newHook}\" instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/custom-directives.html`\r\n    },\r\n    [\"V_FOR_REF\" /* V_FOR_REF */]: {\r\n        message: `Ref usage on v-for no longer creates array ref values in Vue 3. ` +\r\n            `Consider using function refs or refactor to avoid ref usage altogether.`,\r\n        link: `https://v3.vuejs.org/guide/migration/array-refs.html`\r\n    },\r\n    [\"V_ON_KEYCODE_MODIFIER\" /* V_ON_KEYCODE_MODIFIER */]: {\r\n        message: `Using keyCode as v-on modifier is no longer supported. ` +\r\n            `Use kebab-case key name modifiers instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/keycode-modifiers.html`\r\n    },\r\n    [\"ATTR_FALSE_VALUE\" /* ATTR_FALSE_VALUE */]: {\r\n        message: (name) => `Attribute \"${name}\" with v-bind value \\`false\\` will render ` +\r\n            `${name}=\"false\" instead of removing it in Vue 3. To remove the attribute, ` +\r\n            `use \\`null\\` or \\`undefined\\` instead. If the usage is intended, ` +\r\n            `you can disable the compat behavior and suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"ATTR_FALSE_VALUE\" /* ATTR_FALSE_VALUE */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/attribute-coercion.html`\r\n    },\r\n    [\"ATTR_ENUMERATED_COERCION\" /* ATTR_ENUMERATED_COERCION */]: {\r\n        message: (name, value, coerced) => `Enumerated attribute \"${name}\" with v-bind value \\`${value}\\` will ` +\r\n            `${value === null ? `be removed` : `render the value as-is`} instead of coercing the value to \"${coerced}\" in Vue 3. ` +\r\n            `Always use explicit \"true\" or \"false\" values for enumerated attributes. ` +\r\n            `If the usage is intended, ` +\r\n            `you can disable the compat behavior and suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"ATTR_ENUMERATED_COERCION\" /* ATTR_ENUMERATED_COERCION */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/attribute-coercion.html`\r\n    },\r\n    [\"TRANSITION_CLASSES\" /* TRANSITION_CLASSES */]: {\r\n        message: `` // this feature cannot be runtime-detected\r\n    },\r\n    [\"TRANSITION_GROUP_ROOT\" /* TRANSITION_GROUP_ROOT */]: {\r\n        message: `<TransitionGroup> no longer renders a root <span> element by ` +\r\n            `default if no \"tag\" prop is specified. If you do not rely on the span ` +\r\n            `for styling, you can disable the compat behavior and suppress this ` +\r\n            `warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"TRANSITION_GROUP_ROOT\" /* TRANSITION_GROUP_ROOT */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/transition-group.html`\r\n    },\r\n    [\"COMPONENT_ASYNC\" /* COMPONENT_ASYNC */]: {\r\n        message: (comp) => {\r\n            const name = getComponentName(comp);\r\n            return (`Async component${name ? ` <${name}>` : `s`} should be explicitly created via \\`defineAsyncComponent()\\` ` +\r\n                `in Vue 3. Plain functions will be treated as functional components in ` +\r\n                `non-compat build. If you have already migrated all async component ` +\r\n                `usage and intend to use plain functions for functional components, ` +\r\n                `you can disable the compat behavior and suppress this ` +\r\n                `warning with:` +\r\n                `\\n\\n  configureCompat({ ${\"COMPONENT_ASYNC\" /* COMPONENT_ASYNC */}: false })\\n`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/async-components.html`\r\n    },\r\n    [\"COMPONENT_FUNCTIONAL\" /* COMPONENT_FUNCTIONAL */]: {\r\n        message: (comp) => {\r\n            const name = getComponentName(comp);\r\n            return (`Functional component${name ? ` <${name}>` : `s`} should be defined as a plain function in Vue 3. The \"functional\" ` +\r\n                `option has been removed. NOTE: Before migrating to use plain ` +\r\n                `functions for functional components, first make sure that all async ` +\r\n                `components usage have been migrated and its compat behavior has ` +\r\n                `been disabled.`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/functional-components.html`\r\n    },\r\n    [\"COMPONENT_V_MODEL\" /* COMPONENT_V_MODEL */]: {\r\n        message: (comp) => {\r\n            const configMsg = `opt-in to ` +\r\n                `Vue 3 behavior on a per-component basis with \\`compatConfig: { ${\"COMPONENT_V_MODEL\" /* COMPONENT_V_MODEL */}: false }\\`.`;\r\n            if (comp.props &&\r\n                (isArray(comp.props)\r\n                    ? comp.props.includes('modelValue')\r\n                    : hasOwn(comp.props, 'modelValue'))) {\r\n                return (`Component delcares \"modelValue\" prop, which is Vue 3 usage, but ` +\r\n                    `is running under Vue 2 compat v-model behavior. You can ${configMsg}`);\r\n            }\r\n            return (`v-model usage on component has changed in Vue 3. Component that expects ` +\r\n                `to work with v-model should now use the \"modelValue\" prop and emit the ` +\r\n                `\"update:modelValue\" event. You can update the usage and then ${configMsg}`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/v-model.html`\r\n    },\r\n    [\"RENDER_FUNCTION\" /* RENDER_FUNCTION */]: {\r\n        message: `Vue 3's render function API has changed. ` +\r\n            `You can opt-in to the new API with:` +\r\n            `\\n\\n  configureCompat({ ${\"RENDER_FUNCTION\" /* RENDER_FUNCTION */}: false })\\n` +\r\n            `\\n  (This can also be done per-component via the \"compatConfig\" option.)`,\r\n        link: `https://v3.vuejs.org/guide/migration/render-function-api.html`\r\n    },\r\n    [\"FILTERS\" /* FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/filters.html`\r\n    },\r\n    [\"PRIVATE_APIS\" /* PRIVATE_APIS */]: {\r\n        message: name => `\"${name}\" is a Vue 2 private API that no longer exists in Vue 3. ` +\r\n            `If you are seeing this warning only due to a dependency, you can ` +\r\n            `suppress this warning via { PRIVATE_APIS: 'supress-warning' }.`\r\n    }\r\n};\r\nconst instanceWarned = Object.create(null);\r\nconst warnCount = Object.create(null);\r\nfunction warnDeprecation(key, instance, ...args) {\r\n    if (!(process.env.NODE_ENV !== 'production')) {\r\n        return;\r\n    }\r\n    instance = instance || getCurrentInstance();\r\n    // check user config\r\n    const config = getCompatConfigForKey(key, instance);\r\n    if (config === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const dupKey = key + args.join('');\r\n    let compId = instance && formatComponentName(instance, instance.type);\r\n    if (compId === 'Anonymous' && instance) {\r\n        compId = instance.uid;\r\n    }\r\n    // skip if the same warning is emitted for the same component type\r\n    const componentDupKey = dupKey + compId;\r\n    if (componentDupKey in instanceWarned) {\r\n        return;\r\n    }\r\n    instanceWarned[componentDupKey] = true;\r\n    // same warning, but different component. skip the long message and just\r\n    // log the key and count.\r\n    if (dupKey in warnCount) {\r\n        warn(`(deprecation ${key}) (${++warnCount[dupKey] + 1})`);\r\n        return;\r\n    }\r\n    warnCount[dupKey] = 0;\r\n    const { message, link } = deprecationData[key];\r\n    warn(`(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`);\r\n    if (!isCompatEnabled(key, instance, true)) {\r\n        console.error(`^ The above deprecation's compat behavior is disabled and will likely ` +\r\n            `lead to runtime errors.`);\r\n    }\r\n}\r\nconst globalCompatConfig = {\r\n    MODE: 2\r\n};\r\nfunction getCompatConfigForKey(key, instance) {\r\n    const instanceConfig = instance && instance.type.compatConfig;\r\n    if (instanceConfig && key in instanceConfig) {\r\n        return instanceConfig[key];\r\n    }\r\n    return globalCompatConfig[key];\r\n}\r\nfunction isCompatEnabled(key, instance, enableForBuiltIn = false) {\r\n    // skip compat for built-in components\r\n    if (!enableForBuiltIn && instance && instance.type.__isBuiltIn) {\r\n        return false;\r\n    }\r\n    const rawMode = getCompatConfigForKey('MODE', instance) || 2;\r\n    const val = getCompatConfigForKey(key, instance);\r\n    const mode = isFunction$1(rawMode)\r\n        ? rawMode(instance && instance.type)\r\n        : rawMode;\r\n    if (mode === 2) {\r\n        return val !== false;\r\n    }\r\n    else {\r\n        return val === true || val === 'suppress-warning';\r\n    }\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction$1(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, null);\r\n        return null;\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    cache.set(comp, normalized);\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (fallthroughAttrs && inheritAttrs !== false) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment$1) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (false &&\r\n            isCompatEnabled(\"INSTANCE_ATTRS_CLASS_STYLE\" /* INSTANCE_ATTRS_CLASS_STYLE */, instance) &&\r\n            vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */ &&\r\n            (root.shapeFlag & 1 /* ELEMENT */ ||\r\n                root.shapeFlag & 6 /* COMPONENT */)) ;\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment$1);\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment$1 || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment$1 // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (isFunction$1(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (isFunction$1(s)) {\r\n        const isCompiledSlot = s._c;\r\n        if (isCompiledSlot) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (isCompiledSlot) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction$1(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction$1(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(isReactive);\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction$1(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction$1(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\r\n                    : hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (isFunction$1(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject$1(value) || value[\"__v_skip\" /* SKIP */]) {\r\n        return value;\r\n    }\r\n    seen = seen || new Set();\r\n    if (seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment$1 &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment$1) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment$1) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction$1(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction$1(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject$1(comp) && !isFunction$1(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction$1(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction$1(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if ((process.env.NODE_ENV !== 'production') && isPromise$1(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!isObject$1(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactive(data);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (key[0] !== '$' && key[0] !== '_') {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction$1(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction$1(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction$1(opt) && isFunction$1(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction$1(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {\r\n    if (isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        if (isObject$1(opt)) {\r\n            if ('default' in opt) {\r\n                ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                ctx[key] = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = inject(opt);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction$1(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction$1(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject$1(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction$1(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction$1(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    cache.set(base, resolved);\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (extend)(isFunction$1(to) ? to.call(this, this) : to, isFunction$1(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? extend(extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        const castValues = rawCastValues || EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction$1(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    setCurrentInstance(null);\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, EMPTY_ARR);\r\n        return EMPTY_ARR;\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject$1(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction$1(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction$1(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject$1(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    const normalized = withCtx((props) => {\r\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(props));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction$1(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !(false )) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction$1(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        if (dir.deep) {\r\n            traverse(value);\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            resetTracking();\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject$1(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction$1(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction$1(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment$1:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        if (forcePatchValue || patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (isOn(key) && !isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfStart(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfEnd(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            {\r\n                refs[ref] = value;\r\n            }\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction$1(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = (process.env.NODE_ENV !== 'production') && isHmrUpdating ? false : !!n2.dynamicChildren) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment$1:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                    oldVNode.shapeFlag & 64 /* TELEPORT */)\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (dynamicChildren) {\r\n            optimized = true;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment$1));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapper(initialVNode)) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // @ts-ignore\r\n            instance.update.ownerInstance = instance;\r\n        }\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment$1 && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment$1 = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction$1(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment$1;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject$1(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject$1(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction$1(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        type.normalize(vnode);\r\n    }\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment$1, null, text))\r\n        : createVNode(Comment$1, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment$1);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* STABLE */) {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction$1(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject$1(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment$1)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject$1(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            setupState !== EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup && (key[0] === '$' || key[0] === '_')) {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise$1(setupResult)) {\r\n            const unsetInstance = () => {\r\n                currentInstance = null;\r\n            };\r\n            setupResult.then(unsetInstance, unsetInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction$1(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject$1(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && !Component.render) {\r\n            const template = Component.template;\r\n            if (template) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = extend(extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__ && !(false )) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrDevProxyHandlers = {\r\n    get: (target, key) => {\r\n        markAttrsAccessed();\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        let attrs;\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return (attrs || (attrs = new Proxy(instance.attrs, attrDevProxyHandlers)));\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction$1(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction$1(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @deprecated use `defineEmits` instead.\r\n */\r\nconst defineEmit = defineEmits;\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. varaibles inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` decalration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @deprecated use `useSlots` and `useAttrs` instead.\r\n */\r\nfunction useContext() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`\\`useContext()\\` has been deprecated and will be removed in the ` +\r\n            `next minor release. Use \\`useSlots()\\` and \\`useAttrs()\\` instead.`);\r\n    }\r\n    return getContext();\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(\r\n// the base props is compiler-generated and guaranteed to be in this shape.\r\nprops, defaults) {\r\n    for (const key in defaults) {\r\n        const val = props[key];\r\n        if (val) {\r\n            val.default = defaults[key];\r\n        }\r\n        else if (val === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * `<script setup>` helper for persisting the current instance context over\r\n * async/await flows.\r\n *\r\n * `@vue/compiler-sfc` converts the following:\r\n *\r\n * ```ts\r\n * const x = await foo()\r\n * ```\r\n *\r\n * into:\r\n *\r\n * ```ts\r\n * let __temp, __restore\r\n * const x = (([__temp, __restore] = withAsyncContext(() => foo())),__temp=await __temp,__restore(),__temp)\r\n * ```\r\n * @internal\r\n */\r\nfunction withAsyncContext(getAwaitable) {\r\n    const ctx = getCurrentInstance();\r\n    let awaitable = getAwaitable();\r\n    setCurrentInstance(null);\r\n    if (isPromise(awaitable)) {\r\n        awaitable = awaitable.catch(e => {\r\n            setCurrentInstance(ctx);\r\n            throw e;\r\n        });\r\n    }\r\n    return [awaitable, () => setCurrentInstance(ctx)];\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject$1(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject$1(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject$1(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction$1(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject$1(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.1.5\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment$1 as Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useContext, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, Static, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst staticTemplateCache = new Map();\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        let template = staticTemplateCache.get(content);\r\n        if (!template) {\r\n            const t = doc.createElement('template');\r\n            t.innerHTML = isSVG ? `<svg>${content}</svg>` : content;\r\n            template = t.content;\r\n            if (isSVG) {\r\n                // remove outer svg wrapper\r\n                const wrapper = template.firstChild;\r\n                while (wrapper.firstChild) {\r\n                    template.appendChild(wrapper.firstChild);\r\n                }\r\n                template.removeChild(wrapper);\r\n            }\r\n            staticTemplateCache.set(content, template);\r\n        }\r\n        parent.insertBefore(template.cloneNode(true), anchor);\r\n        return [\r\n            // first\r\n            before ? before.nextSibling : parent.firstChild,\r\n            // last\r\n            anchor ? anchor.previousSibling : parent.lastChild\r\n        ];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    // directly setting className should be faster than setAttribute in theory\r\n    // if this is an element during a transition, take the temporary transition\r\n    // classes into account.\r\n    const transitionClasses = el._vtc;\r\n    if (transitionClasses) {\r\n        value = (value\r\n            ? [value, ...transitionClasses]\r\n            : [...transitionClasses]).join(' ');\r\n    }\r\n    if (value == null) {\r\n        el.removeAttribute('class');\r\n    }\r\n    else if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            // the value of some IDL attr must be greater than 0, e.g. input.size = 0 -> error\r\n            try {\r\n                el[key] = 0;\r\n            }\r\n            catch (_a) { }\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        setVarsOnNode(vnode.el, vars);\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n    else if (vnode.type === Static) {\r\n        let { el, anchor } = vnode;\r\n        while (el) {\r\n            setVarsOnNode(el, vars);\r\n            if (el === anchor)\r\n                break;\r\n            el = el.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction setVarsOnNode(el, vars) {\r\n    if (el.nodeType === 1) {\r\n        const style = el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    // #4096 array checkboxes need to be deep traversed\r\n    deep: true,\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    // <select multiple> value need to be deep traversed\r\n    deep: true,\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const isCustomElement = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return isCustomElement;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\r\n            }\r\n        });\r\n        const compilerOptions = app.config.compilerOptions;\r\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\r\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\r\n        Object.defineProperty(app.config, 'compilerOptions', {\r\n            get() {\r\n                warn(msg);\r\n                return compilerOptions;\r\n            },\r\n            set() {\r\n                warn(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    // Split the content into individual lines but capture the newline sequence\r\n    // that separated each line. This is important because the actual sequence is\r\n    // needed to properly take into account the full line length for offset\r\n    // comparison\r\n    let lines = source.split(/(\\r?\\n)/);\r\n    // Separate the lines and newline sequences into separate arrays for easier referencing\r\n    const newlineSequences = lines.filter((_, idx) => idx % 2 === 1);\r\n    lines = lines.filter((_, idx) => idx % 2 === 0);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count +=\r\n            lines[i].length +\r\n                ((newlineSequences[i] && newlineSequences[i].length) || 0);\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                const newLineSeqLength = (newlineSequences[j] && newlineSequences[j].length) || 0;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - (lineLength + newLineSeqLength));\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + newLineSeqLength;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","import { defineComponent, createVNode, mergeProps } from 'vue';\n\nvar uid = (function () {\n  return Math.random().toString(36).substring(2);\n});\n\nvar ContentLoader = defineComponent({\n  name: 'ContentLoader',\n  props: {\n    width: {\n      type: [Number, String]\n    },\n    height: {\n      type: [Number, String]\n    },\n    viewBox: {\n      type: String\n    },\n    preserveAspectRatio: {\n      type: String,\n      \"default\": 'xMidYMid meet'\n    },\n    speed: {\n      type: Number,\n      \"default\": 2\n    },\n    baseUrl: {\n      type: String,\n      \"default\": ''\n    },\n    primaryColor: {\n      type: String,\n      \"default\": '#f9f9f9'\n    },\n    secondaryColor: {\n      type: String,\n      \"default\": '#ecebeb'\n    },\n    primaryOpacity: {\n      type: Number,\n      \"default\": 1\n    },\n    secondaryOpacity: {\n      type: Number,\n      \"default\": 1\n    },\n    uniqueKey: {\n      type: String\n    },\n    animate: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  setup: function setup(props) {\n    var _a, _b, _c;\n\n    var idClip = props.uniqueKey ? props.uniqueKey + \"-idClip\" : uid();\n    var idGradient = props.uniqueKey ? props.uniqueKey + \"-idGradient\" : uid();\n    var width = (_a = props.width) !== null && _a !== void 0 ? _a : 400;\n    var height = (_b = props.height) !== null && _b !== void 0 ? _b : 130;\n    var computedViewBox = (_c = props.viewBox) !== null && _c !== void 0 ? _c : \"0 0 \" + width + \" \" + height;\n    return {\n      idClip: idClip,\n      idGradient: idGradient,\n      computedViewBox: computedViewBox\n    };\n  },\n  render: function render() {\n    return createVNode(\"svg\", {\n      \"width\": this.width,\n      \"height\": this.height,\n      \"viewBox\": this.computedViewBox,\n      \"version\": \"1.1\",\n      \"preserveAspectRatio\": this.preserveAspectRatio\n    }, [createVNode(\"rect\", {\n      \"style\": {\n        fill: \"url(\" + this.baseUrl + \"#\" + this.idGradient + \")\"\n      },\n      \"clip-path\": \"url(\" + this.baseUrl + \"#\" + this.idClip + \")\",\n      \"x\": \"0\",\n      \"y\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    }, null), createVNode(\"defs\", null, [createVNode(\"clipPath\", {\n      \"id\": this.idClip\n    }, [this.$slots[\"default\"] ? this.$slots[\"default\"]() : createVNode(\"rect\", {\n      \"x\": \"0\",\n      \"y\": \"0\",\n      \"rx\": \"5\",\n      \"ry\": \"5\",\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    }, null)]), createVNode(\"linearGradient\", {\n      \"id\": this.idGradient\n    }, [createVNode(\"stop\", {\n      \"offset\": \"0%\",\n      \"stop-color\": this.primaryColor,\n      \"stop-opacity\": this.primaryOpacity\n    }, [this.animate ? createVNode(\"animate\", {\n      \"attributeName\": \"offset\",\n      \"values\": \"-2; 1\",\n      \"dur\": this.speed + \"s\",\n      \"repeatCount\": \"indefinite\"\n    }, null) : null]), createVNode(\"stop\", {\n      \"offset\": \"50%\",\n      \"stop-color\": this.secondaryColor,\n      \"stop-opacity\": this.secondaryOpacity\n    }, [this.animate ? createVNode(\"animate\", {\n      \"attributeName\": \"offset\",\n      \"values\": \"-1.5; 1.5\",\n      \"dur\": this.speed + \"s\",\n      \"repeatCount\": \"indefinite\"\n    }, null) : null]), createVNode(\"stop\", {\n      \"offset\": \"100%\",\n      \"stop-color\": this.primaryColor,\n      \"stop-opacity\": this.primaryOpacity\n    }, [this.animate ? createVNode(\"animate\", {\n      \"attributeName\": \"offset\",\n      \"values\": \"-1; 2\",\n      \"dur\": this.speed + \"s\",\n      \"repeatCount\": \"indefinite\"\n    }, null) : null])])])]);\n  }\n});\n\nvar BulletListLoader = defineComponent(function (props, _a) {\n  var attrs = _a.attrs;\n  return function () {\n    return createVNode(ContentLoader, attrs, {\n      \"default\": function _default() {\n        return [createVNode(\"circle\", {\n          \"cx\": \"10\",\n          \"cy\": \"20\",\n          \"r\": \"8\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"25\",\n          \"y\": \"15\",\n          \"rx\": \"5\",\n          \"ry\": \"5\",\n          \"width\": \"220\",\n          \"height\": \"10\"\n        }, null), createVNode(\"circle\", {\n          \"cx\": \"10\",\n          \"cy\": \"50\",\n          \"r\": \"8\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"25\",\n          \"y\": \"45\",\n          \"rx\": \"5\",\n          \"ry\": \"5\",\n          \"width\": \"220\",\n          \"height\": \"10\"\n        }, null), createVNode(\"circle\", {\n          \"cx\": \"10\",\n          \"cy\": \"80\",\n          \"r\": \"8\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"25\",\n          \"y\": \"75\",\n          \"rx\": \"5\",\n          \"ry\": \"5\",\n          \"width\": \"220\",\n          \"height\": \"10\"\n        }, null), createVNode(\"circle\", {\n          \"cx\": \"10\",\n          \"cy\": \"110\",\n          \"r\": \"8\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"25\",\n          \"y\": \"105\",\n          \"rx\": \"5\",\n          \"ry\": \"5\",\n          \"width\": \"220\",\n          \"height\": \"10\"\n        }, null)];\n      }\n    });\n  };\n});\n\nvar CodeLoader = defineComponent(function (props, _a) {\n  var attrs = _a.attrs;\n  return function () {\n    return createVNode(ContentLoader, attrs, {\n      \"default\": function _default() {\n        return [createVNode(\"rect\", {\n          \"x\": \"0\",\n          \"y\": \"0\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"70\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"80\",\n          \"y\": \"0\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"100\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"190\",\n          \"y\": \"0\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"10\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"15\",\n          \"y\": \"20\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"130\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"155\",\n          \"y\": \"20\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"130\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"15\",\n          \"y\": \"40\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"90\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"115\",\n          \"y\": \"40\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"60\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"185\",\n          \"y\": \"40\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"60\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"0\",\n          \"y\": \"60\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"30\",\n          \"height\": \"10\"\n        }, null)];\n      }\n    });\n  };\n});\n\nvar FacebookLoader = defineComponent(function (props, _a) {\n  var attrs = _a.attrs;\n  return function () {\n    return createVNode(ContentLoader, attrs, {\n      \"default\": function _default() {\n        return [createVNode(\"rect\", {\n          \"x\": \"70\",\n          \"y\": \"15\",\n          \"rx\": \"4\",\n          \"ry\": \"4\",\n          \"width\": \"117\",\n          \"height\": \"6.4\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"70\",\n          \"y\": \"35\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"85\",\n          \"height\": \"6.4\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"0\",\n          \"y\": \"80\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"350\",\n          \"height\": \"6.4\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"0\",\n          \"y\": \"100\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"380\",\n          \"height\": \"6.4\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"0\",\n          \"y\": \"120\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"201\",\n          \"height\": \"6.4\"\n        }, null), createVNode(\"circle\", {\n          \"cx\": \"30\",\n          \"cy\": \"30\",\n          \"r\": \"30\"\n        }, null)];\n      }\n    });\n  };\n});\n\nvar ListLoader = defineComponent(function (props, _a) {\n  var attrs = _a.attrs;\n  return function () {\n    return createVNode(ContentLoader, attrs, {\n      \"default\": function _default() {\n        return [createVNode(\"rect\", {\n          \"x\": \"0\",\n          \"y\": \"0\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"250\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"20\",\n          \"y\": \"20\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"220\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"20\",\n          \"y\": \"40\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"170\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"0\",\n          \"y\": \"60\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"250\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"20\",\n          \"y\": \"80\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"200\",\n          \"height\": \"10\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"20\",\n          \"y\": \"100\",\n          \"rx\": \"3\",\n          \"ry\": \"3\",\n          \"width\": \"80\",\n          \"height\": \"10\"\n        }, null)];\n      }\n    });\n  };\n});\n\nvar InstagramLoader = defineComponent(function (props, _a) {\n  var attrs = _a.attrs;\n  return function () {\n    return createVNode(ContentLoader, mergeProps(attrs, {\n      \"viewBox\": \"0 0 400 480\"\n    }), {\n      \"default\": function _default() {\n        return [createVNode(\"circle\", {\n          \"cx\": \"30\",\n          \"cy\": \"30\",\n          \"r\": \"30\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"75\",\n          \"y\": \"13\",\n          \"rx\": \"4\",\n          \"ry\": \"4\",\n          \"width\": \"100\",\n          \"height\": \"13\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"75\",\n          \"y\": \"37\",\n          \"rx\": \"4\",\n          \"ry\": \"4\",\n          \"width\": \"50\",\n          \"height\": \"8\"\n        }, null), createVNode(\"rect\", {\n          \"x\": \"0\",\n          \"y\": \"70\",\n          \"rx\": \"5\",\n          \"ry\": \"5\",\n          \"width\": \"400\",\n          \"height\": \"400\"\n        }, null)];\n      }\n    });\n  };\n});\n\nexport { BulletListLoader, CodeLoader, ContentLoader, FacebookLoader, InstagramLoader, ListLoader };\n","/*!\n  * vue-router v4.0.11\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nconst noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    const query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    const aLastIndex = a.matched.length - 1;\r\n    const bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (const key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        const positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    const foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    const currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    const historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/vue-router-next/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (const callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (!base.includes('#'))\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    const score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n *\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n *\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        const isRootAdd = !originalRecord;\r\n        const mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            const { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                const parentPath = parent.record.path;\r\n                const connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                const children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            const index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    const newParams = {};\r\n    for (const key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (const name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    const options = {};\r\n    for (const key in defaults) {\r\n        options[key] = key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (const key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (const key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (const key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character. If `text` is `null` or `undefined`, returns an empty\r\n * string instead.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return text == null ? '' : encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        const eqPos = searchParam.indexOf('=');\r\n        const key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        const value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        const values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (const key in query) {\r\n        const value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, \r\n    // to avoid warning\r\n    {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-expect-error: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    const promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                const options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    const options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n *\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        const { matched } = route.value;\r\n        const { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        const currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        const index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        const parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e)) {\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\r\n            // avoid uncaught errors are they are logged anyway\r\n            ).catch(noop);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // devtools only\r\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n        const instance = getCurrentInstance();\r\n        if (instance) {\r\n            const linkContextDevtools = {\r\n                route: route.value,\r\n                isActive: isActive.value,\r\n                isExactActive: isExactActive.value,\r\n            };\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools.push(linkContextDevtools);\r\n            watchEffect(() => {\r\n                linkContextDevtools.route = route.value;\r\n                linkContextDevtools.isActive = isActive.value;\r\n                linkContextDevtools.isExactActive = isExactActive.value;\r\n            }, { flush: 'post' });\r\n        }\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    useLink,\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-expect-error getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-expect-error getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (const key in inner) {\r\n        const innerValue = inner[key];\r\n        const outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://next.router.vuejs.org/',\r\n        logo: 'https://vuejs.org/images/icons/favicon-96x96.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            // if multiple useLink are used\r\n            if (Array.isArray(componentInstance.__vrl_devtools)) {\r\n                componentInstance.__devtoolsApi = api;\r\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\r\n                    let backgroundColor = ORANGE_400;\r\n                    let tooltip = '';\r\n                    if (devtoolsData.isExactActive) {\r\n                        backgroundColor = LIME_500;\r\n                        tooltip = 'This is exactly active';\r\n                    }\r\n                    else if (devtoolsData.isActive) {\r\n                        backgroundColor = BLUE_600;\r\n                        tooltip = 'This link is active';\r\n                    }\r\n                    node.tags.push({\r\n                        label: devtoolsData.route.path,\r\n                        textColor: 0,\r\n                        tooltip,\r\n                        backgroundColor,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n            api.sendInspectorState(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError((error, to) => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error during Navigation',\r\n                    subtitle: to.fullPath,\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    title: 'Start of navigation',\r\n                    subtitle: to.fullPath,\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    subtitle: to.fullPath,\r\n                    time: Date.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (const key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-expect-error\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    const parseQuery$1 = options.parseQuery || parseQuery;\r\n    const stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    const routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = \r\n    // @ts-expect-error: intentionally avoid the type check\r\n    applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        const recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            const locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            const matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            const href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // remove any nullish param\r\n            const targetParams = assign({}, rawLocation.params);\r\n            for (const key in targetParams) {\r\n                if (targetParams[key] == null) {\r\n                    delete targetParams[key];\r\n                }\r\n            }\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        const matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        const href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : (rawLocation.query || {}),\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : // force empty params\r\n                            { path: newTargetLocation };\r\n                // @ts-expect-error: force empty params when a string is passed to let\r\n                // the router parse them again\r\n                newTargetLocation.params = {};\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? error\r\n            : // reject any unknown error\r\n                triggerError(error, toLocation, from))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-expect-error: added only in dev\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-expect-error\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && !from.matched.includes(record)) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    )\r\n                        .then(failure => {\r\n                        // manual change in hash history #916 ending up in the URL not\r\n                        // changing but it was changed by the manual url change, so we\r\n                        // need to manually change it ourselves\r\n                        if (isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ |\r\n                            16 /* NAVIGATION_DUPLICATED */) &&\r\n                            !info.delta &&\r\n                            info.type === NavigationType.pop) {\r\n                            routerHistory.go(-1, false);\r\n                        }\r\n                    })\r\n                        .catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error, toLocation, from);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure) {\r\n                    if (info.delta) {\r\n                        routerHistory.go(-info.delta, false);\r\n                    }\r\n                    else if (info.type === NavigationType.pop &&\r\n                        isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ | 16 /* NAVIGATION_DUPLICATED */)) {\r\n                        // manual change in hash history #916\r\n                        // it's like a push but lacks the information of the direction\r\n                        routerHistory.go(-1, false);\r\n                    }\r\n                }\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     *\r\n     * @param error - error to throw\r\n     * @param to - location we were navigating to when the error happened\r\n     * @param from - location we were navigating from when the error happened\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error, to, from) {\r\n        markAsReady(error);\r\n        const list = errorHandlers.list();\r\n        if (list.length) {\r\n            list.forEach(handler => handler(error, to, from));\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('uncaught error during route navigation:');\r\n            }\r\n            console.error(error);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        const scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(err => triggerError(err, to, from));\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (const key in START_LOCATION_NORMALIZED) {\r\n                // @ts-expect-error: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            const unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                // the router is not attached to an app anymore\r\n                if (installedApps.size < 1) {\r\n                    // invalidate the current navigation\r\n                    pendingLocation = START_LOCATION_NORMALIZED;\r\n                    removeHistoryListener && removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n"],"names":["targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","isEffect","fn","_isEffect","effect","options","raw","createReactiveEffect","lazy","stop","active","cleanup","onStop","uid","includes","enableTracking","push","pop","resetTracking","length","id","allowRecurse","deps","i","delete","shouldTrack","trackStack","pauseTracking","last","undefined","track","target","type","key","depsMap","get","set","Map","dep","Set","has","add","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","forEach","run","scheduler","isNonTrackableKeys","builtInSymbols","Object","getOwnPropertyNames","map","filter","createGetter","shallowGet","readonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","args","arr","toRaw","this","l","res","apply","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","shouldUnwrap","value","readonly","reactive","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","v","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","call","has$1","size","proto","set$1","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","method","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","next","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","iteratorMethods","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","markRaw","convert","val","r","Boolean","__v_isRef","ref","createRef","shallowRef","RefImpl","constructor","_shallow","_rawValue","_value","newVal","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ComputedRefImpl","getter","_setter","_dirty","self","computed","getterOrOptions","setter","callWithErrorHandling","instance","err","handleError","callWithAsyncErrorHandling","catch","values","throwInDev","contextVNode","vnode","cur","parent","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","config","errorHandler","logError","console","error","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","Promise","resolve","currentFlushPromise","currentPreFlushParentJob","nextTick","p","then","bind","findInsertionIndex","job","start","end","jobId","getId","middle","middleJobId","queueJob","pos","splice","queueFlush","flushJobs","invalidateJob","indexOf","queueCb","cb","activeQueue","pendingQueue","index","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","a","b","Infinity","create","emit","event","rawArgs","props","isModelListener","startsWith","modelArg","slice","modifiersKey","number","trim","handlerName","handler","onceHandler","emitted","normalizeEmitsOptions","comp","asMixin","cache","emitsCache","cached","emits","normalized","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","replace","toLowerCase","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","Component","withProxy","propsOptions","slots","attrs","render","renderCache","data","setupState","inheritAttrs","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","keys","some","filterModelListeners","cloneVNode","dirs","concat","transition","blockStack","createVNode","Comment$1","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","children","prevChildren","component","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","el","subTree","isSuspense","__isSuspense","queueEffectWithSuspense","suspense","pendingBranch","provide","currentInstance","provides","parentProvides","inject","defaultValue","treatDefaultAsFactory","arguments","INITIAL_WATCHER_VALUE","watch","source","doWatch","immediate","deep","flush","onTrack","onTrigger","forceTrigger","isMultiSource","s","traverse","isUnmounted","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","createPathGetter","path","segments","split","useTransitionState","state","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","Array","BaseTransitionImpl","name","mode","String","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","setup","getCurrentInstance","prevTransitionKey","default","getTransitionRawChildren","rawProps","child","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","hook","hooks","beforeEnter","leavingVNode","enter","afterHook","cancelHook","called","_enterCb","cancelled","leave","remove","clone","isKeepAlive","ssContent","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","defineComponent","isAsyncWrapper","__asyncLoader","__isKeepAlive","RegExp","matches","pattern","test","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","current","isDeactivated","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","resetShapeFlag","getInnerChild","prepend","__weh","setCurrentInstance","unshift","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onUpdated","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","shouldCacheAccess","applyOptions","resolveMergedOptions","beforeCreate","dataOptions","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","components","directives","filters","checkDuplicateProperties","resolveInjections","methodHandler","opt","c","defineProperty","enumerable","configurable","createWatcher","registerLifecycleHook","register","_hook","exposed","normalizeInject","from","h","base","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","resolved","m","mergeOptions","to","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","initProps","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","rawCastValues","camelKey","castValues","isAbsent","hasDefault","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","match","toString","isSameType","expectedTypes","findIndex","t","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","withDirectives","internalInstance","bindings","dir","arg","modifiers","invokeDirectiveHook","oldBindings","binding","createAppContext","app","isNativeTag","NO","performance","globalProperties","warnHandler","compilerOptions","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","use","plugin","install","mixin","directive","mount","rootContainer","isHydrate","isSVG","__vue_app__","unmount","initFeatureFlags","prodEffectOptions","setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","getExposeProxy","owner","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","createElement","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","dynamicChildren","getNextHostNode","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","scopeId","needCallTransitionHooks","onVnodeMounted","parentVNode","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","class","style","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","hydrateNode","hydrateSubTree","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","Math","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","onVnodeUnmounted","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","n","o","createApp","ch1","ch2","len","arrI","isTeleport","__isTeleport","COMPONENTS","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","getComponentName","registry","currentBlock","openBlock","disableTracking","closeBlock","isBlockTreeEnabled","createBlock","isVNode","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","__vccOpts","klass","__v_skip","targetAnchor","normalize","extraProps","mergeRef","mergedProps","mergeProps","staticCount","createTextVNode","text","flag","slot","slotFlag","toMerge","existing","incoming","renderList","renderItem","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","exposeProxy","setupContext","bc","da","rtg","rtc","sp","compile","setupResult","setupStatefulComponent","createSetupContext","unsetInstance","resolvedResult","handleSetupResult","e","finishComponentSetup","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","_rc","displayName","propsOrChildren","prototype","svgNS","doc","document","staticTemplateCache","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","setAttribute","createTextNode","node","nodeValue","textContent","querySelector","selector","content","before","previousSibling","lastChild","innerHTML","wrapper","firstChild","appendChild","patchClass","transitionClasses","_vtc","join","removeAttribute","className","patchStyle","display","cssText","setStyle","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","_a","_getNow","Date","now","skipTimestampCheck","window","createEvent","timeStamp","ffMatch","navigator","userAgent","cachedNow","reset","getNow","addEventListener","removeEventListener","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","hasExplicitCallback","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","setTimeout","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","max","hasTransform","delays","d","toMs","body","offsetHeight","getModelAssigner","onCompositionStart","composing","onCompositionEnd","initEvent","dispatchEvent","vModelText","_assign","castToNumber","domValue","activeElement","systemModifiers","modifierGuards","stopPropagation","prevent","preventDefault","currentTarget","ctrl","ctrlKey","shift","shiftKey","alt","altKey","meta","metaKey","left","button","right","exact","withModifiers","guard","rendererOptions","ensureRenderer","containerOrSelector","normalizeContainer","SVGElement","Element","makeMap","str","expectsLowerCase","list","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","isArray","item","isString","parseStringStyle","isObject","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","toDisplayString","JSON","stringify","replacer","_key","isMap","entries","reduce","isSet","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","onRE","isOn","extend","assign","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","def","obj","toNumber","parseFloat","isNaN","module","exports","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","reject","requestData","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","params","paramsSerializer","onreadystatechange","readyState","status","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","response","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","cancel","abort","send","Axios","mergeConfig","defaults","createInstance","defaultConfig","axios","instanceConfig","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","message","__CANCEL__","executor","TypeError","resolvePromise","token","reason","throwIfRequested","InterceptorManager","dispatchRequest","interceptors","chain","interceptor","fulfilled","rejected","getUri","handlers","eject","isAbsoluteURL","combineURLs","requestedURL","enhanceError","code","Error","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","toJSON","description","fileName","lineNumber","columnNumber","stack","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","mergeDeepProperties","axiosKeys","otherKeys","validateStatus","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","parse","maxContentLength","maxBodyLength","encode","serializedParams","parts","toISOString","hashmarkIndex","relativeURL","write","expires","domain","secure","cookie","isNumber","toGMTString","decodeURIComponent","payload","originURL","msie","urlParsingNode","resolveURL","href","protocol","host","search","hash","hostname","port","pathname","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","line","substr","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","stripBOM","charCodeAt","random","substring","ContentLoader","width","height","viewBox","preserveAspectRatio","speed","baseUrl","primaryColor","secondaryColor","primaryOpacity","secondaryOpacity","uniqueKey","animate","_b","idClip","idGradient","computedViewBox","fill","hasSymbol","toStringTag","PolySymbol","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","isESModule","__esModule","applyToParams","newParams","noop","TRAILING_SLASH_RE","removeTrailingSlash","parseURL","parseQuery","currentLocation","query","searchString","searchPos","hashPos","resolveRelativePath","stringifyURL","stringifyQuery","stripBase","isSameRouteLocation","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","every","fromSegments","toSegments","toPosition","segment","position","NavigationType","NavigationDirection","normalizeBase","baseEl","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","scrollTo","getScrollKey","delta","history","scrollPositions","saveScrollPosition","scrollPosition","getSavedScrollPosition","scroll","createBaseLocation","createCurrentLocation","slicePos","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","listener","direction","forward","back","unknown","pauseListeners","listen","teardown","beforeUnloadListener","replaceState","destroy","buildState","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","REGEX_CHARS_RE","tokensToParser","extraOptions","score","segmentScores","tokenIndex","subSegmentScore","repeatable","optional","regexp","re","subPattern","avoidDuplicatedSlash","endsWith","param","compareScoreArray","diff","comparePathParserScore","aScore","bScore","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","record","parser","matcher","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","normalizedRecords","aliases","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","paramsFromLocation","k","find","parentMatcher","mergeMetaFields","redirect","normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","propsObject","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","normalizeQuery","normalizedQuery","useCallbacks","guardToPromiseFn","enterCallbackArray","valid","guardReturn","guardCall","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","componentPromise","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","guardEvent","RouterLinkImpl","required","activeClass","exactActiveClass","custom","ariaCurrentValue","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","RouterLink","defaultPrevented","outer","inner","innerValue","outerValue","propClass","globalClass","defaultClass","RouterViewImpl","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","oldInstance","oldName","matchedRoute","ViewComponent","currentName","routePropsOption","routeProps","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","targetParams","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","started","installedApps","beforeEach","beforeResolve","afterEach","onError","$router","reactiveRoute","unmountApp","recordFrom","recordTo"],"sourceRoot":""}